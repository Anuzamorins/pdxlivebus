{
  "name": "angular-fire",
  "version": "0.0.0",
  "main": "./angularFire.js",
  "dependencies": {
    "angular": "1.0.7"
  },
  "gitHead": "bfb831ca1e703d28c8f186e031a97001511f2348",
  "readme": "AngularFire\r\n===========\r\nAngularFire is an officially supported [AngularJS](http://angularjs.org/) binding\r\nfor [Firebase](http://www.firebase.com/?utm_medium=web&utm_source=angularFire).\r\nFirebase is a full backend so you don't need servers to build your Angular app!\r\n\r\nThe bindings let you associate a Firebase URL with a model (or set of models),\r\nand they will be transparently kept in sync across all clients currently using\r\nyour app. The 2-way data binding offered by AngularJS works as normal, except\r\nthat the changes are also sent to all other clients instead of just a server.\r\n\r\n### Live Demo: <a target=\"_blank\" href=\"http://firebase.github.com/angularFire/examples/chat/\">Simple chat room</a>.\r\n### Live Demo: <a target=\"_blank\" href=\"http://firebase.github.com/angularFire/examples/todomvc/\">Real-time TODO app</a>.\r\n\r\n[![Build Status](https://travis-ci.org/firebase/angularFire.png)](https://travis-ci.org/firebase/angularFire)\r\n\r\nUsage\r\n-----\r\nInclude both firebase.js and angularFire.js in your application.\r\n\r\n```html\r\n<script src=\"https://cdn.firebase.com/v0/firebase.js\"></script>\r\n<script src=\"angularFire.js\"></script>\r\n```\r\n\r\nAdd the module `firebase` as a dependency to your app module:\r\n\r\n```js\r\nvar myapp = angular.module('myapp', ['firebase']);\r\n```\r\n\r\nYou now have two options.\r\n\r\nOption 1: Implicit synchronization\r\n----------------------------------\r\nThis method is great if you want to implicitly synchronize a model with Firebase.\r\nAll local changes will be automatically sent to Firebase, and all remote changes\r\nwill instantly update the local model.\r\n\r\nSet `angularFire` as a service dependency in your controller:\r\n\r\n```js\r\nmyapp.controller('MyCtrl', ['$scope', 'angularFire',\r\n  function MyCtrl($scope, angularFire) {\r\n    ...\r\n  }\r\n]);\r\n```\r\n\r\nBind a Firebase URL to any model in `$scope`. The fourth argument is the type\r\nof model you want to use (can be any JavaScript type, you mostly want a\r\ndictionary or array):\r\n\r\n```js\r\nvar url = 'https://<my-firebase>.firebaseio.com/items';\r\nvar promise = angularFire(url, $scope, 'items', []);\r\n```\r\n\r\nUse the model in your markup as you normally would:\r\n\r\n```html\r\n<ul ng-controller=\"MyCtrl\">\r\n  <li ng-repeat=\"item in items\">{{item.name}}: {{item.desc}}</li>\r\n</ul>\r\n```\r\n\r\nData from Firebase is loaded asynchronously, so make sure you edit the model\r\n*only after the promise has been fulfilled*. You can do this using the `then`\r\nmethod (See the\r\n[Angular documentation on $q](http://docs.angularjs.org/api/ng.$q)\r\nfor more on how promises work).\r\n\r\nPlace all your logic that will manipulate the model like this:\r\n\r\n```js\r\npromise.then(function() {\r\n  // Add a new item by simply modifying the model directly.\r\n  $scope.items.push({name: \"Firebase\", desc: \"is awesome!\"});\r\n  // Or, attach a function to $scope that will let a directive in markup manipulate the model.\r\n  $scope.removeItem = function() {\r\n    $scope.items.splice($scope.toRemove, 1);\r\n    $scope.toRemove = null;\r\n  };\r\n});\r\n```\r\n\r\nSee the source for the\r\n[controller behind the demo TODO app](https://github.com/firebase/angularFire/blob/gh-pages/examples/todomvc/js/controllers/todoCtrl.js)\r\nfor a working example of this pattern.\r\n\r\nOption 2: Explicit synchronization\r\n---------------------------------- \r\nThis method is great if you want control over when local changes are\r\nsynchronized to Firebase. Any changes made to a model won't be synchronized\r\nautomatically, and you must invoke specific methods if you wish to update the\r\nremote data. All remote changes will automatically appear in the local model\r\n(1-way synchronization).\r\n\r\nSet `angularFireCollection` as a service dependency in your controller:\r\n\r\n```js\r\nmyapp.controller('MyCtrl', ['$scope', 'angularFireCollection',\r\n  function MyCtrl($scope, angularFireCollection) {\r\n    ...\r\n  }\r\n]);\r\n```\r\n\r\nCreate a collection at a specified Firebase URL and assign it to a model in `$scope`:\r\n\r\n```js\r\n$scope.items = angularFireCollection(url);\r\n```\r\n\r\nUse the model as you normally would in your markup:\r\n\r\n```html\r\n<ul ng-controller=\"MyCtrl\">\r\n  <li ng-repeat=\"item in items\">{{item.name}}: {{item.desc}}</li>\r\n</ul>\r\n```\r\n\r\nYou can bind specific functions if you wish to add, remove or update objects in\r\nthe collection with any Angular directive:\r\n\r\n```html\r\n<form ng-submit=\"items.add(item)\">\r\n  <input type=\"text\" ng-model=\"item.name\" placeholder=\"Name\" required/>\r\n  <input type=\"text\" ng-model=\"item.desc\" placeholder=\"Description\"/>\r\n</form>\r\n```\r\n\r\nYou can do the same with the `remove` and `update` methods.\r\n\r\nSee the source for the\r\n[controller behind the demo chat app](https://github.com/firebase/angularFire/blob/gh-pages/examples/chat/app.js)\r\nfor a working example of this pattern.\r\n\r\nDevelopment\r\n-----------\r\nIf you'd like to hack on AngularFire itself, you'll need\r\n[UglifyJS](https://github.com/mishoo/UglifyJS2) and\r\n[CasperJS](https://github.com/n1k0/casperjs):\r\n\r\n```bash\r\nnpm install uglifyjs -g\r\nbrew install casperjs\r\n```\r\n\r\nA Makefile is included for your convenience:\r\n\r\n```bash\r\n# Run tests\r\nmake test\r\n# Minify source\r\nmake minify\r\n```\r\n\r\nLicense\r\n-------\r\n[MIT](http://firebase.mit-license.org).\r\n",
  "readmeFilename": "README.md",
  "_id": "angular-fire@0.1.0",
  "description": "AngularFire\r ===========\r AngularFire is an officially supported [AngularJS](http://angularjs.org/) binding\r for [Firebase](http://www.firebase.com/?utm_medium=web&utm_source=angularFire).\r Firebase is a full backend so you don't need servers to build your Angular app!",
  "commit": "bfb831ca1e703d28c8f186e031a97001511f2348",
  "repository": {
    "type": "git",
    "url": "git://github.com/firebase/angularFire.git"
  }
}